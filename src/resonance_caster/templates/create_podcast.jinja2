{% extends "layout.jinja2" %}

{% block content %}
<div class="max-w-3xl mx-auto">
    <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8">
        <div class="bg-gradient-to-r from-indigo-600 to-purple-600 p-6 text-white">
            <h1 class="text-2xl font-bold">새 팟캐스트 채널 만들기</h1>
            <p class="text-indigo-100">당신만의 새로운 팟캐스트 채널을 생성하세요.</p>
        </div>

        <div class="p-6">
            <form action="{{ request.route_url('create_podcast') }}" method="post" enctype="multipart/form-data" id="create-podcast-form" class="space-y-6">
                <!-- 팟캐스트 제목 -->
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700 mb-1">팟캐스트 제목</label>
                    <input type="text" name="title" id="title" required class="input-standard w-full" placeholder="팟캐스트 제목을 입력하세요">
                </div>

                <!-- 팟캐스트 설명 -->
                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-1">팟캐스트 설명</label>
                    <textarea name="description" id="description" rows="4" class="input-standard w-full" placeholder="팟캐스트에 대한 설명을 입력하세요."></textarea>
                </div>

                <!-- 커버 이미지 업로드 -->
                <div>
                    <label for="cover_image" class="block text-sm font-medium text-gray-700 mb-1">커버 이미지</label>
                    <div class="flex items-center justify-center w-full">
                        <label for="cover_image" class="flex flex-col items-center justify-center w-full h-40 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                            <div class="flex flex-col items-center justify-center pt-5 pb-6" id="cover-placeholder">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-10 h-10 mb-3 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">클릭하여 이미지 선택</span> 또는 드래그 앤 드롭</p>
                                <p class="text-xs text-gray-500">JPG, PNG (최대 5MB)</p>
                            </div>
                            <div class="hidden flex-col items-center justify-center pt-5 pb-6" id="cover-preview">
                                <img id="cover-preview-image" src="" alt="Cover preview" class="w-32 h-32 object-cover rounded mb-2">
                                <p class="text-xs text-gray-500" id="cover-file-name">image.jpg</p>
                            </div>
                            <input id="cover_image" name="cover_image" type="file" class="hidden" accept="image/jpeg, image/png" />
                        </label>
                    </div>
                </div>

                <!-- 제출 버튼 -->
                <div class="flex justify-end">
                    <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded-lg transition duration-300">
                        팟캐스트 채널 생성
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const coverInput = document.getElementById('cover_image');
        const coverPlaceholder = document.getElementById('cover-placeholder');
        const coverPreview = document.getElementById('cover-preview');
        const coverPreviewImage = document.getElementById('cover-preview-image');
        const coverFileName = document.getElementById('cover-file-name');

        // 이미지 파일 선택 시 미리보기 업데이트
        coverInput.addEventListener('change', function(e) {
            if (this.files && this.files[0]) {
                const file = this.files[0];
                coverFileName.textContent = file.name;

                const reader = new FileReader();
                reader.onload = function(e) {
                    coverPreviewImage.src = e.target.result;
                }
                reader.readAsDataURL(file);

                coverPlaceholder.classList.add('hidden');
                coverPreview.classList.remove('hidden');
            }
        });
    });
</script>
{% endblock %}